{"version":3,"sources":["components/Header/index.jsx","data/sharedValues.js","data/children.js","data/components.js","data/context.js","data/misc.js","data/react-dom.js","data/test-utils.js","data/index.js","components/Reference/ReferenceItem.jsx","components/Reference/index.jsx","components/Search/index.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","sharedValues","categories","defaults","map","category","Object","objectSpread","shared","name","example","reference","module","notSupported","lifecycleMethods","setStateTriggersUpdate","calledFor","useFor","receivesContext","chart","event","i","key","data-label","playground","src_data","concat","toConsumableArray","children","components","context","misc","dom","testutils","ReferenceItem","props","href","target","rel","Reference","result","items","length","item","index","Reference_ReferenceItem","Search","handleInputChange","autoFocus","type","onChange","placeholder","App","state","data","e","value","_this","filterByName","setState","s","arr","toLowerCase","filter","el","includes","components_Header","components_Search","this","components_Reference","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78c3e4a9.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css'\n\nfunction Header() {\n    return(\n        <div className=\"header-container\">\n            <h1 className=\"header\">React Cheat Sheet <span className=\"small\">v16</span></h1>\n        </div>\n        \n    )\n}\n\nexport default Header\n","export default function(categories, defaults) {\n    return categories.map(category => {\n        return { ...category, ...defaults };\n    });\n}","import shared from './sharedValues';\n\nconst data = [{\n        name: \"Children.map\",\n        example: `React.Children.map(this.props.children, (child, i) => {\n      return child;\n  })`,\n        reference: \"https://reactjs.org/docs/react-api.html#reactchildrenmap\",\n    },\n    {\n        name: \"Children.forEach\",\n        example: `React.Children.forEach(this.props.children, (child, i) => {\n    console.log(child + ' at index: ' + i);\n  })`,\n        reference: \"https://reactjs.org/docs/react-api.html#reactchildrenforeach\",\n    },\n    {\n        name: \"Children.count\",\n        example: `React.Children.count(this.props.children);`,\n        reference: \"https://reactjs.org/docs/react-api.html#reactchildrencount\",\n    },\n    {\n        name: \"Children.only\",\n        example: `React.Children.only(this.props.children);`,\n        reference: \"https://reactjs.org/docs/react-api.html#reactchildrenonly\",\n    },\n    {\n        name: \"Children.toArray\",\n        example: `React.Children.toArray(this.props.children)`,\n        reference: \"https://reactjs.org/docs/react-api.html#reactchildrentoarray\",\n    },\n]\n\nexport default shared(data, {\n    module: \"react\",\n    category: \"Children\"\n})","import shared from './sharedValues';\n\nconst data = [{\n        name: \"render\",\n        example: `render() {\n    return <div />;\n  }`,\n        reference: \"https://reactjs.org/docs/react-component.html#render\"\n    },\n    {\n        name: \"constructor\",\n        example: `constructor(props) {\n    super(props);\n    this.state = {\n      list: props.initialList\n    };\n  }\n  \n  // where props aren't used in constructor\n  \n  constructor() {\n    super();\n    this.state = {\n      list: []\n    };\n  }`,\n        reference: \"https://reactjs.org/docs/react-component.html#constructor\"\n    },\n    {\n        name: \"componentWillMount\",\n        example: `componentWillMount() {\n    // invoked once.\n    // fires before initial 'render'\n  }`,\n        reference: \"https://reactjs.org/docs/react-component.html#componentwillmount\"\n    },\n    {\n        name: \"componentDidMount\",\n        example: `componentDidMount() {\n    // good for AJAX: fetch, ajax, or subscriptions.\n  \n    // invoked once (client-side only).\n    // fires before initial 'render'\n  }`,\n        reference: \"https://reactjs.org/docs/react-component.html#componentdidmount\"\n    },\n    {\n        name: \"componentWillReceiveProps\",\n        example: `componentWillReceiveProps(nextProps) {\n    // invoked every time component recieves new props.\n    // does not before initial 'render'\n  }`,\n        reference: \"https://reactjs.org/docs/react-component.html#componentwillreceiveprops\"\n    },\n    {\n        name: \"shouldComponentUpdate\",\n        example: `shouldComponentUpdate(nextProps, nextState) {\n    // invoked before every update (new props or state).\n    // does not fire before initial 'render'.\n  }`,\n        reference: \"https://reactjs.org/docs/react-component.html#shouldcomponentupdate\"\n    },\n    {\n        name: \"componentWillUpdate\",\n        example: `componentWillUpdate(nextProps, nextState) {\n    // invoked immediately before update (new props or state).\n    // does not fire before initial 'render'.\n  \n    // (see componentWillReceiveProps if you need to call setState)\n  }`,\n        reference: \"https://reactjs.org/docs/react-component.html#componentwillupdate\",\n        notSupported: \"this.setState\"\n    },\n    {\n        name: \"componentDidUpdate\",\n        example: `componentDidUpdate(prevProps, prevState) {\n    // invoked immediately after DOM updates\n    // does not fire after initial 'render'\n  }`,\n        reference: \"https://reactjs.org/docs/react-component.html#componentdidupdate\"\n    },\n    {\n        name: \"componentWillUnmount\",\n        example: `componentWillUnmount() {\n    // invoked immediately before a component is unmounted.\n  }`,\n        reference: \"https://reactjs.org/docs/react-component.html#componentwillunmount\"\n    },\n    {\n        name: \"setState (function)\",\n        example: `// good for state transitions\n  \n  this.setState((prevState, props) => {\n    return {count: prevState.count + props.step};\n  });`,\n        reference: \"https://reactjs.org/docs/react-component.html#setstate\"\n    },\n    {\n        name: \"setState (object)\",\n        example: `// good for static values\n  \n  this.setState({mykey: 'my new value'});`,\n        reference: \"https://reactjs.org/docs/react-component.html#setstate\"\n    },\n    {\n        name: \"setState (optional callback)\",\n        example: `// fires after setState\n  // prefer componentDidUpdate\n  \n  this.setState(\n    (prevState, props) => ({ count: prevState.count + props.step }),\n    () => console.log(this.state.count)\n  );`,\n        reference: \"https://reactjs.org/docs/react-component.html#setstate\"\n    },\n    {\n        name: \"forceUpdate\",\n        example: `// forces a re-render; AVOID if possible\n  \n  this.forceUpdate();`,\n        reference: \"https://reactjs.org/docs/react-component.html#forceupdate\"\n    },\n    {\n        name: \"displayName\",\n        example: `displayName: \"MyComponent\"`,\n        reference: \"https://reactjs.org/docs/react-component.html#defaultprops\",\n    },\n    {\n        name: \"defaultProps\",\n        example: `class Greeting extends React.Component {\n        render() {\n          return <h1>Hi {this.props.name}</h1>\n        }\n      }\n      \n      CustomButton.defaultProps = {\n        name: 'guest'\n      };`,\n        reference: \"https://reactjs.org/docs/react-component.html#defaultprops\",\n    },\n];\n\nexport default shared(data, {\n    module: \"react\",\n    category: \"Component\"\n})","import shared from './sharedValues';\n\nconst data = [{\n        name: \"Context (example)\",\n        example: `// requires 'prop-types' library\n  \n  import { string } from \"prop-types\";\n  \n  class Cowboy extends React.Component {\n    childContextTypes: {\n      salutation: string\n    }\n  \n    getChildContext() {\n      return { salutation: \"Howdy\" };\n    }\n  \n    render() {\n      return React.Children.only(this.props.children);\n    }\n  }\n  \n  const Greeting = (props, context) =>\n    <div>{this.context.salutation} {this.props.name}.</div>\n  \n  Greeting.contextTypes = {\n    salutation: PropTypes.string\n  }\n  \n  // <Greeting name=\"Michael\" />\n  // => Michael.\n  \n  // <Cowboy><Greeting name=\"Michael\" /></Cowboy>\n  // => Howdy Michael.\n  `,\n        reference: \"https://facebook.github.io/react/docs/context.html\",\n    },\n    {\n        name: \"contextTypes\",\n        example: `// add to the context-aware component\n  // requires 'prop-types' library\n  \n  contextTypes: {\n    color: PropTypes.string\n  },`,\n        reference: \"https://facebook.github.io/react/docs/context.html\",\n    },\n    {\n        name: \"childContextTypes\",\n        example: `// add to the context provider\n  // requires 'prop-types' library\n  \n  childContextTypes: {\n    color: PropTypes.string\n  },`,\n        reference: \"https://facebook.github.io/react/docs/context.html\",\n    },\n    {\n        name: \"getChildContext\",\n        example: `// add to the context provider\n  \n  getChildContext() {\n    return {color: \"purple\"};\n  }`,\n        reference: \"https://facebook.github.io/react/docs/context.html\",\n    },\n];\n\nexport default shared(data, {\n    module: \"react\",\n    category: \"Context\"\n})","import React from 'react';\nimport shared from './sharedValues';\nimport './style.css';\n\nconst lifecycleMethods = [\n    {\n        name: \"componentWillMount\",\n        setStateTriggersUpdate: \"no\",\n        calledFor: \"initial render()\",\n        useFor: \".\",\n        receivesContext: \"no\"\n    },\n    {\n        name: \"componentDidMount\",\n        setStateTriggersUpdate: \"yes\",\n        calledFor: \"initial render()\",\n        useFor: \"async setup, refs, DOM manipulation\",\n        receivesContext: \"no\"\n    },\n    {\n        name: \"componentWillReceiveProps\",\n        setStateTriggersUpdate: \"yes\",\n        calledFor: \"new props\",\n        useFor: \"respond to props before update\",\n        receivesContext: \"yes\"\n    },\n    {\n        name: \"shouldComponentUpdate\",\n        setStateTriggersUpdate: \"yes\",\n        calledFor: \"new props/state\",\n        useFor: \"performance. return false to skip update\",\n        receivesContext: \"yes\"\n    },\n    {\n        name: \"componentWillUpdate\",\n        setStateTriggersUpdate: \"n/a\",\n        calledFor: \"new props/state\",\n        useFor: \"preparation before update\",\n        receivesContext: \"yes\"\n    },\n    {\n        name: \"componentDidUpdate\",\n        setStateTriggersUpdate: \"yes\",\n        calledFor: \"new props/state\",\n        useFor: \"DOM manipulation after update\",\n        receivesContext: \"no\"\n    },\n    {\n        name: \"componentWillUnmount\",\n        setStateTriggersUpdate: \"n/a\",\n        calledFor: \"unmounting\",\n        useFor: \"cleanup of componentDidMount setup\",\n        receivesContext: \"no\"\n    }\n]\n\nconst LifecycleMethodsChart = () => ( \n    <table>\n        <thead>\n            <tr>\n                <th> name </th> \n                <th> called for </th> \n                <th> receives context </th> \n                <th> setState() triggers an update </th> \n            </tr> \n        </thead>\n        <tbody> \n        {lifecycleMethods.map((event, i) => ( \n            <tr key={i}>\n                <td data-label=\"name\">{event.name}</td> \n                <td data-label=\"called for\">{event.calledFor}</td>\n                <td data-label=\"receives context\">{event.receivesContext}</td>\n                <td data-label=\"setState() triggers an update\">{event.setStateTriggersUpdate}</td>\n            </tr>\n        ))} \n        </tbody> \n    </table>\n)\n\nconst data = [\n    {\n        name: \"Lifecycle methods\",\n        chart: <LifecycleMethodsChart />,\n        example: \"\"\n    },\n    {\n        name: \"ref (class component)\",\n        example: `class AutoFocusTextInput extends React.Component {\n  componentDidMount() {\n    this.textInput.focus();\n  }\n\n  render() {\n    return (\n      <CustomTextInput\n        ref={(input) => { this.textInput = input; }} />\n    );\n  }\n}`,\n        reference: \"https://facebook.github.io/react/docs/refs-and-the-dom.html#adding-a-ref-to-a-class-component\"\n    },\n    {\n        name: \"ref (functional component)\",\n        example: `function CustomTextInput(props) {\n  let textInput = null;\n\n  function handleClick() {\n    textInput.focus();\n  }\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        ref={(input) => { textInput = input; }} />\n      <input\n        type=\"button\"\n        value=\"Focus the text input\"\n        onClick={handleClick}\n      />\n    </div>\n  );\n}`,\n        reference: \"https://facebook.github.io/react/docs/refs-and-the-dom.html#refs-and-functional-components\"\n    },\n    {\n        name: \"functional component\",\n        example: `const Greeting = props => <div>Hello {props.name}</div>;`,\n        reference: \"https://facebook.github.io/react/docs/reusable-components.html#stateless-functions\",\n        module: \"react\"\n    },\n    {\n        name: \"functional component (with context)\",\n        example: `import { string } from \"prop-types\";\n\nconst Greeting = (props, context) => (\n  <div>{context.salutation} {props.name}</div>\n);\n\nGreeting.contextTypes = { salutation: string };`,\n        reference: \"https://facebook.github.io/react/docs/reusable-components.html#stateless-functions\",\n        module: \"react\"\n    }\n]\n\nexport default shared(data, {\n    category: \"misc\"\n})\n\n\n\n\n","import shared from './sharedValues';\n\nconst data = [\n    {\n      name: \"render\",\n      example: `import { render } from \"react-dom\";\n  \n  render(\n    <MyComponent />,\n    document.getElementById(\"component-root\"),\n    () => console.log(\"MyComponent mounted.\")\n  );`,\n      reference: \"https://reactjs.org/docs/react-dom.html#render\",\n      module: \"react-dom\"\n    },\n    {\n      name: \"hydrate\",\n      example: `import { hydrate } from \"react-dom\";\n  \n  hydrate(\n    <MyComponent />,\n    document.getElementById(\"component-root\"),\n    () => console.log(\"MyComponent hydrated.\")\n  );`,\n      reference: \"https://reactjs.org/docs/react-dom.html#hydrate\",\n      module: \"react-dom\"\n    },\n    {\n      name: \"unmountComponentAtNode\",\n      example: `import { unmountComponentAtNode } from \"react-dom\";\n  \n  unmountComponentAtNode(document.getElementById('MyComponent'))`,\n      reference: \"https://reactjs.org/docs/react-dom.html#unmountcomponentatnode\",\n      module: \"react-dom\"\n    },\n    {\n      name: \"findDOMNode\",\n      example: `import { findDOMNode } from \"react-dom\";\n  \n  findDOMNode(componentRef);`,\n      reference: \"https://reactjs.org/docs/react-dom.html#finddomnode\",\n      module: \"react-dom\"\n    },\n    {\n      name: \"createPortal\",\n      example: `import { createPortal } from \"react-dom\";\n  \n  class MyPortalComponent extends React.Component {\n    render() {\n  \n      return createPortal(\n        this.props.children,\n        document.getElementById(\"portal-element\"),\n      );\n    }\n  }`,\n      reference: \"https://reactjs.org/docs/react-dom.html#createportal\",\n      module: \"react-dom\"\n    },\n    {\n      name: \"renderToString\",\n      example: `import { renderToString } from \"react-dom/server\";\n  ReactDOMServer.renderToString(<MyComponent />);`,\n      reference: `https://reactjs.org/docs/react-dom-server.html#rendertostring`,\n      module: \"react-dom/server\"\n    },\n    {\n      name: \"renderToStaticMarkup\",\n      example: `import {renderToStaticMarkup} from \"react-dom/server\";\n  renderToStaticMarkup(<MyComponent />);`,\n      reference: \"https://reactjs.org/docs/react-dom-server.html#rendertostaticmarkup\",\n      module: \"react-dom/server\"\n    },\n    {\n      name: \"renderToNodeStream\",\n      example: `import { renderToNodeStream } from \"react-dom/server\";\n  renderToNodeStream(<MyComponent />);`,\n      reference: \"https://reactjs.org/docs/react-dom-server.html#rendertonodestream\",\n      module: \"react-dom/server\"\n    },\n    {\n      name: \"renderToStaticNodeStream\",\n      example: `import { renderToStaticNodeStream } from \"react-dom/server\";\n  renderToStaticNodeStream(<MyComponent />);`,\n      reference: \"https://reactjs.org/docs/react-dom-server.html#rendertostaticnodestream\",\n      module: \"react-dom/server\",\n    }\n  ];\nexport default shared(data, {\n    category: \"react-dom\"\n})","import shared from './sharedValues';\n\nconst data = [{\n        name: \"Simulate (basic)\",\n        example: `var subject = TestUtils.renderIntoDocument(\n    <div onClick={handleClick} />\n  );\n  \n  TestUtils.Simulate.click(subject);`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#simulate\",\n        playground: \"http://jsbin.com/foxini/edit?html,js,console\",\n    },\n\n    {\n        name: \"Simulate (with data)\",\n        example: `function handleChange (event) {\n    console.log('A change was simulated with key: ' + event.key);\n  }\n  \n  var subject = TestUtils.renderIntoDocument(\n    <input type=\"text\" onChange={handleChange} />\n  );\n  \n  TestUtils.Simulate.change(subject, { key: \"Enter\" });`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#simulate\",\n        playground: \"http://jsbin.com/wiqile/edit?html,js,console\",\n    },\n\n    {\n        name: \"renderIntoDocument\",\n        example: `var componentTree = TestUtils.renderIntoDocument(<div><span /></div>);\n  \n  console.log('You mounted a component tree with a ' + componentTree.tagName + ' at the root!');`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#renderintodocument\",\n        playground: \"http://jsbin.com/buzigo/edit?html,js,console\",\n    },\n\n    {\n        name: \"mockComponent\",\n        example: `// no example`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#mockcomponent\",\n    },\n\n    {\n        name: \"isElement\",\n        example: `expect(TestUtils.isElement(<div />)).toBe(true);`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#iselement\",\n        playground: \"http://jsbin.com/jiyune/edit?html,js,console\",\n    },\n\n    {\n        name: \"isElementOfType\",\n        example: `var MyComponent = React.createClass({\n    render () {\n      return <div />;\n    }\n  });\n  \n  expect(\n    TestUtils.isElementOfType(<MyComponent />, MyComponent)\n  ).toBe(true);`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#iselementoftype\",\n        playground: \"http://jsbin.com/pasohi/edit?html,js,console\",\n    },\n\n    {\n        name: \"isDOMComponent\",\n        example: `var subject = TestUtils.renderIntoDocument(<div />);\n  \n  expect(\n    TestUtils.isDOMComponent(subject)\n  ).toBe(true);`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#isdomcomponent\",\n        playground: \"http://jsbin.com/fadoka/edit?html,js,console\",\n    },\n\n    {\n        name: \"isCompositeComponent\",\n        example: `var subject = TestUtils.renderIntoDocument(\n    <CompositeComponent />\n  );\n  \n  expect(\n    TestUtils.isCompositeComponent(subject)\n  ).toBe(true);`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#iscompositecomponent\",\n        playground: \"http://jsbin.com/vocofa/edit?html,js,console\",\n    },\n\n    {\n        name: \"isCompositeComponentWithType\",\n        example: `var CompositeComponent = React.createClass({\n    render () {\n      return <div />;\n    }\n  });\n  \n  var subject = TestUtils.renderIntoDocument(\n    <CompositeComponent />\n  );\n  \n  expect(\n    TestUtils.isCompositeComponentWithType(\n      subject,\n      CompositeComponent\n    )\n  ).toBe(true);`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#iscompositecomponentwithtype\",\n        playground: \"http://jsbin.com/kegoqe/edit?html,js,console\",\n    },\n\n    {\n        name: \"findAllInRenderedTree\",\n        example: `var CompositeComponent = React.createClass({\n    render () {\n      return <div><div /></div>;\n    }\n  });\n  \n  var componentTree = TestUtils.renderIntoDocument(\n    <CompositeComponent />\n  );\n  \n  var allDivs = TestUtils.findAllInRenderedTree(\n    componentTree,\n    (c) => c.tagName === 'DIV'\n  )\n  \n  expect(allDivs).toBeAn('array');\n  expect(allDivs.length).toBe(2);`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#findallinrenderedtree\",\n        playground: \"http://jsbin.com/dozevu/edit?html,js,console\",\n    },\n\n    {\n        name: \"scryRenderedDOMComponentsWithClass\",\n        example: `var CompositeComponent = React.createClass({\n    render () {\n      return (\n        <div className=\"target\">\n          <div className=\"not-target\">\n            <div className=\"target\" />\n          </div>\n        </div>\n      );\n    }\n  });\n  \n  var componentTree = TestUtils.renderIntoDocument(\n    <CompositeComponent />\n  );\n  \n  var allDOMComponentsWithMatchingClass = TestUtils.scryRenderedDOMComponentsWithClass(\n    componentTree,\n    'target'\n  );\n  \n  expect(allDOMComponentsWithMatchingClass).toBeAn('array');\n  expect(allDOMComponentsWithMatchingClass.length).toBe(2);`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#scryrendereddomcomponentswithclass\",\n        playground: \"http://jsbin.com/kujeda/edit?html,js,console\",\n    },\n\n    {\n        name: \"findRenderedDOMComponentWithClass\",\n        example: `var MyCompositeComponent = React.createClass({\n    render () {\n      return <MyNestedComponent />;\n    }\n  });\n  \n  var MyNestedComponent = React.createClass({\n    render () {\n      return <div className=\"nested\"/>;\n    }\n  });\n  \n  var componentTree = TestUtils.renderIntoDocument(<MyCompositeComponent />);\n  \n  var singleComponentWithMatchedClass = TestUtils.findRenderedDOMComponentWithClass(\n    componentTree,\n    'nested'\n  );\n  \n  expect(singleComponentWithMatchedClass).toBeAn('object');\n  expect(singleComponentWithMatchedClass).toNotBeAn('array');\n  expect(singleComponentWithMatchedClass.className).toBe('nested');`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#findrendereddomcomponentwithclass\",\n        playground: \"http://jsbin.com/kuteve/edit?html,js,console\",\n    },\n\n    {\n        name: \"scryRenderedDOMComponentsWithTag\",\n        example: `var CompositeComponent = React.createClass({\n    render () {\n      return <div><div /></div>;\n    }\n  });\n  \n  var componentTree = TestUtils.renderIntoDocument(\n    <CompositeComponent />\n  );\n  \n  var allDivs = TestUtils.scryRenderedDOMComponentsWithTag(\n    componentTree,\n    'DIV'\n  );\n  \n  expect(allDivs).toBeAn('array');\n  expect(allDivs.length).toBe(2);`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#scryrendereddomcomponentswithtag\",\n        playground: \"http://jsbin.com/hehede/edit?html,js,console\",\n    },\n\n    {\n        name: \"findRenderedDOMComponentWithTag\",\n        example: `var MyCompositeComponent = React.createClass({\n    render () {\n      return <MyNestedComponent />;\n    }\n  });\n  \n  var MyNestedComponent = React.createClass({\n    render () {\n      return <div />;\n    }\n  });\n  \n  var componentTree = TestUtils.renderIntoDocument(<MyCompositeComponent />);\n  \n  var onlyDiv = TestUtils.findRenderedDOMComponentWithTag(\n    componentTree,\n    'div'\n  );\n  \n  expect(onlyDiv).toBeAn('object');\n  expect(onlyDiv).toNotBeAn('array');\n  expect(onlyDiv.tagName).toBe('DIV');`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#findrendereddomcomponentwithtag\",\n        playground: \"http://jsbin.com/puhule/edit?html,js,console\",\n    },\n\n    {\n        name: \"scryRenderedComponentsWithType\",\n        example: `var MyCompositeComponent = React.createClass({\n    render () {\n      return (\n        <div>\n          <Target />\n          <br />\n          <Target />\n        </div>\n      )\n    }\n  });\n  \n  var Target = React.createClass({\n    render () {\n      return <div />;\n    }\n  });\n  \n  var componentTree = TestUtils.renderIntoDocument(\n    <MyCompositeComponent />\n  );\n  \n  var allTargetComponents = TestUtils.scryRenderedComponentsWithType(\n    componentTree,\n    Target\n  );\n  \n  expect(allTargetComponents).toBeAn('array');\n  expect(allTargetComponents.length).toBe(2);`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#scryrenderedcomponentswithtype\",\n        playground: \"http://jsbin.com/lesowo/edit?html,js,console\",\n    },\n\n    {\n        name: \"findRenderedComponentWithType\",\n        example: `var MyCompositeComponent = React.createClass({\n    render () { return <TargetComponent /> }\n  });\n  \n  var TargetComponent = React.createClass({\n    render () { return <div /> }\n  });\n  \n  var componentTree = TestUtils.renderIntoDocument(\n    <MyCompositeComponent />\n  );\n  \n  var onlyTargetComponent = TestUtils.findRenderedComponentWithType(\n    componentTree,\n    TargetComponent\n  );\n  \n  expect(onlyTargetComponent).toBeAn('object');\n  expect(onlyTargetComponent).toNotBeAn('array');\n  expect(TestUtils.isCompositeComponentWithType(\n    onlyTargetComponent,\n    TargetComponent\n  )).toBe(true);`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#findrenderedcomponentwithtype\",\n        playground: \"http://jsbin.com/wosane/edit?html,js,console\",\n    },\n\n    {\n        name: \"Shallow rendering (basics)\",\n        example: `// 1. create a renderer\n  var renderer = TestUtils.createRenderer();\n  \n  // 2. render component into renderer\n  renderer.render(<MyComponent />);\n  \n  // 3. capture renderer output\n  var subject = renderer.getRenderOutput();\n  \n  // 4. make assertions\n  expect(subject.type).toBe('div');`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#shallow-rendering\",\n        playground: \"http://jsbin.com/raloqu/edit?html,js,console\",\n    },\n\n    {\n        name: \"Shallow rendering (type example)\",\n        example: `var renderer = TestUtils.createRenderer();\n  \n  renderer.render(<MyComponent />);\n  \n  var subject = renderer.getRenderOutput();\n  \n  expect(subject.type).toBe('div');  // => true`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#shallow-rendering\",\n        playground: \"http://jsbin.com/xojudi/edit?html,js,console\",\n    },\n\n    {\n        name: \"Shallow rendering (props example)\",\n        example: `var renderer = TestUtils.createRenderer();\n  \n  renderer.render(<MyComponent className=\"my-component\" />);\n  \n  var subject = renderer.getRenderOutput();\n  \n  expect(subject.props.className).toBe('my-component'); // => true`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#shallow-rendering\",\n        playground: \"http://jsbin.com/najubu/edit?html,js,console\",\n    },\n\n    {\n        name: \"Shallow rendering (child-count example)\",\n        example: `var renderer = TestUtils.createRenderer();\n  \n  renderer.render(\n    <MyList items={[1, 2, 3]} />\n  );\n  \n  var subject = renderer.getRenderOutput();\n  \n  var childCount = React.Children.count(subject.props.children);\n  \n  expect(childCount).toBe(3); // => true`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#shallow-rendering\",\n        playground: \"http://jsbin.com/dayomi/edit?html,js,console\",\n    },\n\n    {\n        name: \"Shallow rendering (child-equality example)\",\n        example: `var renderer = TestUtils.createRenderer();\n  \n  renderer.render(\n    <MyComponent>\n      <div>Thing 1</div>\n      <div>Thing 2</div>\n    </MyComponent>\n  );\n  \n  var subject = renderer.getRenderOutput();\n  \n  expect(subject.props.children).toEqual([\n    <div>Thing 1</div>,\n    <div>Thing 2</div>\n  ]); // => true`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#shallow-rendering\",\n        playground: \"http://jsbin.com/sexeve/edit?html,js,console\",\n    },\n\n    {\n        name: \"Shallow rendering (events example)\",\n        example: `var renderer = TestUtils.createRenderer();\n  \n  var spy = expect.createSpy();\n  \n  renderer.render(<MyComponent onClick={spy} />);\n  \n  var subject = renderer.getRenderOutput();\n  \n  expect(spy.call.length).toEqual(1); // => true`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#shallow-rendering\",\n        playground: \"http://jsbin.com/quzeya/edit?html,js,console\",\n    },\n\n    {\n        name: \"Shallow rendering (state changes example)\",\n        example: `var renderer = TestUtils.createRenderer();\n  \n  renderer.render(<ClickCounter />);\n  \n  // test initial rendering\n  var result = renderer.getRenderOutput();\n  \n  expect(result.props.children).toEqual(0);\n  \n  \n  // test post-click rendering\n  result.props.onClick();\n  \n  var clickedResult = renderer.getRenderOutput();\n  \n  expect(clickedResult.props.children).toEqual(1);`,\n        reference: \"https://facebook.github.io/react/docs/test-utils.html#shallow-rendering\",\n        playground: \"http://jsbin.com/nobavu/edit?html,js,console\",\n    },\n];\n\nexport default shared(data, {\n    module: \"react-dom/test-utils\",\n    category: \"test-utils\"\n})","import children from './children';\nimport components from './components';\nimport context from './context';\nimport misc from './misc';\nimport dom from './react-dom';\nimport testutils from './test-utils';\n\nexport default [\n    ...children,\n    ...components,\n    ...context,\n    ...misc,\n    ...dom,\n    ...testutils\n]","import React from 'react';\nimport './style.css';\n\nfunction ReferenceItem(props) {\n    const { name, example, module, href, chart, playground, notSupported } = props\n\n    return(\n        <div className=\"item\">\n            <h2 className=\"name\">{name}</h2>\n            <div>\n                <div className=\"floatRight\">\n                    {playground && \n                        <a \n                            className=\"example\"\n                            href={playground}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                        >\n                        example\n                        </a>\n                    }\n                    {href &&\n                        <a\n                            className=\"docs\"\n                            href={href}\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                        >\n                        docs\n                        </a>\n                    }\n                </div>\n                <div className=\"module\">{module}</div>\n            </div>\n            \n            {example &&\n                <pre className=\"pre\">\n                    <code className=\"pre-example\">{example}</code>\n                </pre>\n            }\n            {chart &&\n                <div className=\"chart\">{chart}</div>\n            }\n            {notSupported &&\n                <span className=\"noSup\"><strong>{`\\u2716 ${notSupported}`}</strong></span>\n            }\n        </div>\n    )\n}\n\nexport default ReferenceItem","import React from 'react';\nimport ReferenceItem from './ReferenceItem';\nimport './style.css'\n\nfunction Reference(props) {\n    const { items } = props\n    let result\n    if (!items.length) {\n        result = (\n            <div className=\"noRes\">\n                <h2 className=\"noRes-content\">No results</h2>\n            </div>\n        )\n    } else {\n        result = (\n            <div>\n                {items.map((item, index) =>(\n                    <ReferenceItem \n                        key={index}\n                        name={item.name}\n                        example={item.example}\n                        module={item.module}\n                        href={item.reference}\n                        chart={item.chart}\n                        playground={item.playground}\n                        notSupported={item.notSupported}\n                    />\n                ))}\n            </div>\n        )\n    }\n\n    return (\n        <div className=\"results\">{result}</div>\n    )\n\n}\n\nexport default Reference\n","import React from 'react';\nimport './style.css'\n\nfunction Search(props) {\n    const { handleInputChange } = props\n    return(\n        <form className=\"form\">\n            <input \n                className=\"search\"\n                autoFocus\n                type=\"text\"\n                onChange={handleInputChange}\n                placeholder=\"Filter by name\"\n            />\n        </form>\n    )\n}\n\nexport default Search","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport data from './data';\nimport Reference from './components/Reference';\nimport Search from './components/Search';\n\nclass App extends Component {\n  state = {\n    data\n  }\n\n  handleInputChange = e => {\n    const { value } = e.target\n    let items = data\n    items = this.filterByName(value, items)\n    this.setState({\n      data: items\n    })\n  }\n\n  filterByName = (s, arr) => {\n    s = s.toLowerCase()\n    return arr.filter(el => {\n      let cur = el.name.toLowerCase()\n      return cur.includes(s)\n    })\n  }\n\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Search handleInputChange={this.handleInputChange}/>\n        <Reference items={this.state.data}/>\n\n      </div>\n    )\n  }\n\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}